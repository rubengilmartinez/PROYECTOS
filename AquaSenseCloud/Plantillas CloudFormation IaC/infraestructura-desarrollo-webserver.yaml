AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Despliegue de la infraestructura de red, grupos de seguridad y una instancia EC2 para desarrollo y pruebas de correcto funcionamiento de nuestra aplicacion(servisor web)

Resources:

  ## VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 192.168.0.0/16
      Tags:
        - Key: Name
          Value: vpc-server-development

  ## Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Internet-Gateway-server-development

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ## Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  ## Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.1.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: public-subnet-server-development

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable


  # Docker instance
  DockerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-08a0d1e16fc3f61ea
      KeyName: keypair-server-development
      IamInstanceProfile: LabInstanceProfile
      NetworkInterfaces:
        - GroupSet:
            - !Ref FlaskSecurityGroup
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: DockerInstance-server-development
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          dnf update -y
          #install Docker
          dnf -y install docker

  DiskVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt DockerInstance.AvailabilityZone
    DeletionPolicy: Snapshot

  DiskMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref DockerInstance
      VolumeId: !Ref DiskVolume
      Device: /dev/sdh

  FlaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permite acceso SSH al servidor Flask a traves del puerto 22 y acceso a traves del puerto 5000 para comprobar el correcto funcionamiento del servidor
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: FlaskSG-server-development
